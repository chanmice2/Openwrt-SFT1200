Index: libiwinfo-2019-11-03-31dcef31/hardware.txt
===================================================================
--- libiwinfo-2019-11-03-31dcef31.orig/hardware.txt
+++ libiwinfo-2019-11-03-31dcef31/hardware.txt
@@ -180,3 +180,5 @@
 0x14c3 0x7650 0x14c3 0x7650    0      0  "MediaTek" "MT7610E"
 0x14c3 0x7662 0x14c3 0x7662    0      0  "MediaTek" "MT76x2E"
 0x1ae9 0x0310 0x1ae9 0x0000    0      0  "Wilocity" "Wil6210"
+0x1688 0x1618 0xffff 0xffff    0      0  "Siflower" "SF16A18"
+0x1688 0x1928 0xffff 0xffff    0      0  "Siflower" "SF19A28"
Index: libiwinfo-2019-11-03-31dcef31/iwinfo_nl80211.c
===================================================================
--- libiwinfo-2019-11-03-31dcef31.orig/iwinfo_nl80211.c
+++ libiwinfo-2019-11-03-31dcef31/iwinfo_nl80211.c
@@ -3085,7 +3085,17 @@ static int nl80211_get_hardware_id(const
 
 	memset(id, 0, sizeof(*id));
 
-	/* Try to determine the phy name from the given interface */
+    id->vendor_id = 0x1688;
+#ifdef CONFIG_TARGET_siflower_sf19a28_fullmask
+    id->device_id = 0x1928;
+#else
+    id->device_id = 0xffff;
+#endif
+    id->subsystem_vendor_id = 0xffff;
+    id->subsystem_device_id = 0xffff;
+
+    /* The old logic is inconsistent with our WiFi driver */
+	/* // Try to determine the phy name from the given interface
 	phy = nl80211_ifname2phy(ifname);
 
 	for (i = 0; i < ARRAY_SIZE(lookup); i++)
@@ -3098,11 +3108,11 @@ static int nl80211_get_hardware_id(const
 			*lookup[i].dest = strtoul(num, NULL, 16);
 	}
 
-	/* Failed to obtain hardware IDs, search board config */
+    // Failed to obtain hardware IDs, search board config
 	if (id->vendor_id == 0 || id->device_id == 0)
-		return iwinfo_hardware_id_from_mtd(id);
+		return iwinfo_hardware_id_from_mtd(id);*/
 
-	return 0;
+    return 0;
 }
 
 static const struct iwinfo_hardware_entry *
